{"version":3,"sources":["constants/productConstants.js","store.js","reducers/productReducers.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","weather/ApiData.js","weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","reducer","combineReducers","productList","state","tours","action","type","loading","payload","error","productDetails","tour","reviews","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","color","text","style","Product","Card","_id","Img","src","image","varaint","Body","Title","as","name","Text","rating","numReviews","price","HomeScreen","dispatch","useDispatch","useSelector","useEffect","a","axios","get","data","response","message","map","sm","md","lg","xl","ProductScreen","match","params","Image","alt","fluid","ListGroup","Item","ListGroupItem","description","countInStock","Button","disabled","getWeatherData","cityname","Weather","useState","weatherdata","setWeatherData","city","setCity","getData","console","log","onChange","e","target","placeholder","onClick","weather","icon","main","temp","toFixed","sys","country","parseFloat","temp_min","temp_max","humidity","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93590ab0.chunk.js","sourcesContent":["// Always create CONSTANTS for Actions being deployed in specific components\r\n\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux' \r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailsReducer} from './reducers/productReducers'\r\n\r\n// import devtools\r\n// create MAIN reducer - combine reducer {}, initialState - object\r\n// productList and productListDetails are the ones you pass into the Product and Home Screens\r\n\r\n\r\nconst reducer = combineReducers({\r\n        productList: productListReducer,\r\n        productDetails: productDetailsReducer})\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst store = createStore(\r\n        reducer,\r\n        initialState, \r\n        composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n// reducer takes in two things, 1 initial state, 2 actions\r\n// state can be set into an empty object\r\n// actions has type and payload\r\n// SWITCH case is to evaluate the type in the action object\r\n// three product list types. REQUEST, SUCCESS, FAIL\r\n\r\n\r\nexport const productListReducer = (state = { tours: []}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, tours: action.payload }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { tour: { reviews: []}}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, tour: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default: \r\n        return state\r\n    }\r\n}","import React from 'react';\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' variant='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>TRAVEL AND TOURS</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ms-auto'>\r\n              <LinkContainer to='/weather'>\r\n                <Nav.Link>\r\n                  {' '}\r\n                  <i className='fas fa-cloud-sun'></i>Weather\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  {' '}\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  {' '}\r\n                  <i className='fas fa-user'></i>Sign In\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-4'>\r\n                 myFooter\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Rating = ({value, color, text}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : \r\n                              value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : \r\n                              value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : \r\n                              value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : \r\n                              value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : \r\n                              value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n                <span>{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\n\r\nconst Product = ({tours}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${tours._id}`}>\r\n                <Card.Img src={tours.image} varaint='top' />\r\n            </Link>\r\n                <Card.Body>\r\n                    <Link to={`/product/${tours._id}`}>\r\n                        <Card.Title as='div'><strong>{tours.name}</strong> </Card.Title>\r\n                    </Link>\r\n\r\n                    <Card.Text as='div'>\r\n                        <Rating value={tours.rating} text={`${tours.numReviews} reviews`} color={'#f8e825'} />\r\n                    </Card.Text>\r\n                    <Card.Text as='h4'> ${tours.price} </Card.Text>\r\n\r\n                    \r\n                </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React, { useEffect } from 'react'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\n// once data is available, it can now then be passed as an array to the useState\r\n// do this by invoking setTours and passing on the data\r\n// have to call fetchTours outside in order to work\r\n// useEffect takes in a second arguement, pass in array of dependencies (any variable). Anything that needs to fire off use effect when anything changes.\r\n// to avoid getting 404 error because of axios.get going to localhost 3000, setup a proxy on frontend JSON \"proxy\": \"http://127.0.0.1:5000\",\r\n// MAKE SURE TO RUN npm start on fullstackbackend directory for the server and frontend for the axiox.get request.\r\n// ========================================================================================\r\n\r\n// FOR REDUX  ==== take out axios, useState, but import useDispatch, and useSElector from react-redux\r\n// useDispatch is used to call for the Actions, then useSelector is used to access the state (product list) in the redux store\r\n// * define dispatch for useDispatch\r\n// * use listProducts actions inside the useEffect to fire off and get the list of products\r\n// * place dispatch as a dependency, second arguement in useEffect\r\n// CHECK REDUX DEVTOOLS if redux is working\r\n// * useEffect dispatch to send request to access listProducts, then useSelector to access state\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, tours } = productList\r\n        useEffect(()=> {\r\n            dispatch(listProducts())\r\n\r\n        },[dispatch])\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>List of Tours</h1>\r\n            {loading ? <h2>Loading....</h2> : error ? <h3>{error}</h3> :\r\n             <Row>\r\n             {tours.map(tours =>(\r\n                 <Col key={tours._id} sm={12} md={6} lg={4} xl={3}>\r\n                     <Product tours ={tours} />\r\n                 </Col>\r\n\r\n             ))}\r\n            </Row> }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n// the product constants are the actions dispatched back to the reducers\r\n// listProducts is the action creator (functions)\r\n// redux thunk allows us to put a function inside a function\r\n//  == dispatch using the action\r\n// == if successful, the output will be the data inside payload. and the type of action will be a success\r\n// == if it fails , there is error  in catch, the dispatch type will be a fail and payload will be the error response\r\n\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        \r\n\r\n        const { data } = await axios.get('/api/tours')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response || error.message\r\n        \r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n\r\n        const { data } = await axios.get(`/api/tours/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response || error.message\r\n        \r\n        })\r\n\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\n\r\n\r\n// productscreen  displays the images when a specific tour is selected\r\n// tours.find() iterates through the array and outputs the value of the item of the element if it is boolean true.\r\n// match is an object property (props.match) that I have deconstructed to {{ match }} that matches the params id with the url.\r\n// so with match, if tour number 3 is selected, then tour with _id 3 will be displayed along with /3 on url\r\n// Link bootstrap btn maps to homepage that takes you back there when clicked\r\n// 'flush' takes out borders\r\n// fluid makes sure that image does not spill out from the container.\r\n// btn-block makes it a block level element. makes the button stretch accross.\r\n// useState will take in an object, and not an array like from the homescreen. \r\n// use match\r\nconst ProductScreen = ({match}) => {\r\n\r\n    // const [tour, setTour] = useState ({})\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, tour} = productDetails\r\n\r\n    \r\n\r\n    useEffect(()=> {\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n\r\n        // const fetchTour = async () => {\r\n        //     // const response = await axios.get('/api/tours') - can be de-structured since output is response.data\r\n        //     const { data } = await axios.get(`/api/tours/${match.params.id}`)   \r\n        //     setTour(data)\r\n        // }       \r\n        // fetchTour()\r\n    }, [dispatch, match])\r\n    \r\n   \r\n    \r\n   \r\n    return (\r\n        <>\r\n        \r\n         <Link className='btn btn-light my-3' to='/'>Back</Link>\r\n         {loading ? <h2>Loading....</h2> : error ? <h3>{error}</h3> :\r\n        <Row>\r\n            <Col md={6}>\r\n                <Image src={tour.image} alt={tour.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h4>{tour.name}</h4>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating value={tour.rating} text={`${tour.numReviews} reviews`} color={'#f8e825'} />\r\n                    </ListGroup.Item>\r\n                    <ListGroupItem>\r\n                        Price: ${tour.price}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <b>Description:</b> {tour.description}\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    {tour.price}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status:\r\n                                </Col>\r\n                                <Col>\r\n                                    {tour.countInStock > 0 ? 'Seats available' : 'No more Seats available'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Button className='btn-block' type='button' disabled={tour.countInStock === 0}>\r\n                                Add to Cart\r\n                            </Button>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n    }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'http://api.openweathermap.org/data/2.5/weather?';\r\nconst apiKey = '4fa01a6de1a81523c863d93e79b6891f';\r\n\r\nexport const getWeatherData = async (cityname) => {\r\n    try{\r\n        const {data} = await axios.get(baseUrl + `q=${cityname}&appid=${apiKey}`);\r\n        return data;\r\n    }catch(error) {\r\n        throw error;\r\n    }\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { getWeatherData } from './ApiData';\r\n\r\n\r\nconst Weather = () => {\r\n  const [weatherdata, setWeatherData] = useState(null);\r\n  const [city, setCity] = useState('Boston');\r\n \r\n\r\n  const getData = async () => {\r\n    try{\r\n       \r\n        const data = await getWeatherData(city);\r\n        setWeatherData(data);\r\n        \r\n    }catch(error) {\r\n      console.log(error.message);\r\n     \r\n    }\r\n  }\r\n \r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"card\">\r\n        <h2 className=\"title\"><i className=\"fa fa-cloud\"></i>Check the Weather at your destination</h2>\r\n        <div className=\"search-form\">\r\n          <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Enter your city name\"/>\r\n          <button type=\"button\" onClick={() => getData()}>Search</button>\r\n        </div>\r\n      \r\n          {weatherdata !== null ? (\r\n          <div className=\"main-container\">\r\n            <h4>Live Weather Condition</h4>\r\n            <div className=\"weather-icon\">\r\n              <img src={`http://openweathermap.org/img/w/${weatherdata.weather[0].icon}.png`} alt=\"imgicon\"/>\r\n            </div>\r\n            <h3>{weatherdata.weather[0].main}</h3>\r\n            <div className=\"temprature\">\r\n              <h1>{(weatherdata.main.temp - 273.15).toFixed(1)}&deg;C</h1>\r\n            </div>\r\n            <div className=\"location\">\r\n            <h3><i className=\"fas fa-map-marked-alt\"> </i> {weatherdata.name} | {weatherdata.sys.country}</h3>\r\n            </div>\r\n            <div className=\"temprature-range\">\r\n              <h6>Min: {parseFloat(weatherdata.main.temp_min - 273.15).toFixed(1)}&deg;C \r\n              || Max: {parseFloat(weatherdata.main.temp_max - 273.15).toFixed(1)}&deg;C \r\n              || Humidity: {weatherdata.main.humidity}%</h6>\r\n            </div>\r\n        </div>\r\n        ) : null}\r\n           \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport Weather from './weather/Weather';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-4'>\n        <Container>\n          \n         <Route exact path='/' component={HomeScreen}/> \n         <Route path='/Product/:id' component={ProductScreen}/> \n         <Route path='/Weather' component={Weather} />\n        </Container>\n      \n      \n      </main>\n      <Footer />\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}